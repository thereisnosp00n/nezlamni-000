.preloader, .index {
  height: fit-content;
  width: 100%;
  left: 0;
  position: absolute;
  top: 0;
}

.preloader {
  align-items: center;
  display: flex;
  justify-content: center;
  text-align: center;
}

.dg.ac {
  z-index: 99999 !important;
}

.index__worldsupports__paragraphs__wrapper .index__worldsupports__paragraph:nth-of-type(3), .index__worldsupports__paragraphs__wrapper .index__worldsupports__paragraph:nth-of-type(1), .index__intro__paragraphs__wrapper .index__intro__paragraph:nth-of-type(2), .index__intro__paragraphs__wrapper .index__intro__paragraph:nth-of-type(1) {
  font-family: "Noto Serif";
  font-size: 1.8rem;
  line-height: 1.5;
  text-transform: uppercase;
}
button {
  cursor: pointer;
}

html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after {
  content: "";
  content: none;
}

q:before, q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

@font-face {
  font-family: "Montserrat";
  src: url(ac86cc185119698a96aa875783b44d9c.woff2) format("woff2");
  font-weight: 800;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Montserrat";
  src: url(2e1e9adc764829d22dd1b09dfcd480f9.woff2) format("woff2");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Montserrat";
  src: url(9f53bd2b48020eb435562b4079ab415f.woff2) format("woff2");
  font-weight: 200;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Montserrat";
  src: url(984ada18ff126dc2e193dbbdd833ade5.woff2) format("woff2");
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Montserrat";
  src: url(bc5469d9e2b2f752188da03d930a59e6.woff2) format("woff2");
  font-weight: bold;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Montserrat";
  src: url(6cee1c8e09bc423cd1a5eb430758642e.woff2) format("woff2");
  font-weight: 600;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Noto Serif";
  src: url(8d305cfd6ca4b362e1bc926fe9194aa1.woff2) format("woff2");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Noto Serif";
  src: url(629087e80b2812190bf70c8fc1669309.woff2) format("woff2");
  font-weight: bold;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Noto Serif";
  src: url(98bcb912a0cc9eeff5f9c2cd5b107459.woff2) format("woff2");
  font-weight: 300;
  font-style: normal;
  font-display: swap;
}
*,
*:after,
*:before {
  box-sizing: border-box;
}

html {
  cursor: none;
  overflow: hidden;
  font-size: 0.703125vw;
  touch-action: none;
}
@media (max-width: 759px) {
  html {
    font-size: 0.9375vw;
  }
}
@media (max-width: 449px) {
  html {
    font-size: 1.7777777778vw;
  }
}

a {
  color: inherit;
  outline: none;
  text-decoration: none;
}

body {
  font-weight: 300;
  font-size: 24px;
  font-family: "Montserrat";
  background-color: #ffffff;
  color: #ffffff;
}

.content {
  overflow: hidden;
}

span span {
  overflow: hidden;
}

img {
  opacity: 1;
  vertical-align: middle;
}

.custom__cursor {
  width: 5rem;
  height: 5rem;
  position: fixed;
  top: 0;
  left: 0;
  box-shadow: 0 0 0 1px #ffffff;
  border-radius: 50%;
  pointer-events: none;
  z-index: 9 !important;
  display: flex;
  align-items: center;
  justify-content: center;
}

.custom__cursor__dot {
  position: fixed;
  top: 0;
  left: 0;
  width: 0.75rem;
  height: 0.75rem;
  background-color: #000000;
  border-radius: 50%;
  pointer-events: none;
  z-index: 9 !important;
  box-shadow: 0 0 0 1px #ffffff;
}

[data-animation=paragraph] span,
[data-animation=title] span {
  display: inline-block;
  overflow: hidden;
  vertical-align: top;
}

* {
  box-sizing: border-box;
}

figure {
  overflow: hidden;
}

body {
  box-sizing: border-box;
  display: block;
  color: #ffffff;
}

.index {
  width: 100vw;
}

.index__wrapper {
  overflow: hidden;
  position: fixed;
  margin: auto;
  width: 100vw;
  color: #ffffff;
  background-color: #000000;
}

.index__herobanner__image__wrapper {
  height: 100vh;
}

.index__herobanner__image {
  height: 100%;
}

.index__herobanner__titles__wrapper {
  color: #FFE459;
  text-transform: uppercase;
  text-align: center;
  font-weight: 800;
}
.index__herobanner__titles__wrapper .index__herobanner__title {
  width: 100%;
}
.index__herobanner__titles__wrapper .index__herobanner__title:nth-of-type(1) {
  font-size: 24.8rem;
}
.index__herobanner__titles__wrapper .index__herobanner__title:nth-of-type(2) {
  font-size: 13.8rem;
}

.index__intro__paragraphs__wrapper {
  margin: 12.6rem auto;
  width: 50%;
  text-align: center;
}
.index__intro__paragraphs__wrapper .index__intro__paragraph:nth-of-type(2) {
  margin: auto;
  margin-top: 11.8rem;
  color: #FFE459;
  width: 60%;
}
.index__intro__paragraphs__wrapper .index__intro__paragraph:nth-of-type(3) {
  margin-top: 4rem;
  font-family: "Noto Serif";
  font-size: 6rem;
  text-transform: uppercase;
}

.index__intro__gallery__wrapper {
  width: 100%;
  position: relative;
  padding: 0.2rem;
  height: 131rem;
}
.index__intro__gallery__wrapper .index__intro__gallery__image__wrapper {
  position: absolute;
}
.index__intro__gallery__wrapper .index__intro__gallery__image__wrapper:nth-of-type(1) {
  left: 6rem;
  top: 20rem;
}
.index__intro__gallery__wrapper .index__intro__gallery__image__wrapper:nth-of-type(2) {
  left: 39.6rem;
  top: 12.4rem;
}
.index__intro__gallery__wrapper .index__intro__gallery__image__wrapper:nth-of-type(3) {
  left: 118rem;
  top: 20rem;
}
.index__intro__gallery__wrapper .index__intro__gallery__image__wrapper:nth-of-type(4) {
  left: 17.2rem;
  top: 63.4rem;
}
.index__intro__gallery__wrapper .index__intro__gallery__image__wrapper:nth-of-type(5) {
  left: 62.2rem;
  top: 71.1rem;
}
.index__intro__gallery__wrapper .index__intro__gallery__image__wrapper:nth-of-type(6) {
  left: 106.8rem;
  top: 76rem;
}

.index__worldsupports__wrapper {
  background-color: #006DEC;
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  position: relative;
  padding-bottom: 27.5rem;
  margin-bottom: 27.5rem;
}

.index__worldsupports__wrapper__image__wrapper {
  margin-top: 8rem;
}
.index__worldsupports__paragraphs__wrapper {
  margin: 3.6rem auto;
}
.index__worldsupports__paragraphs__wrapper .index__worldsupports__paragraph {
  text-transform: uppercase;
  margin: auto;
  font-family: "Noto Serif";
  width: 40%;
  text-align: center;
}
.index__worldsupports__paragraphs__wrapper .index__worldsupports__paragraph:nth-of-type(1) {
  color: #FFE459;
}
.index__worldsupports__paragraphs__wrapper .index__worldsupports__paragraph:nth-of-type(2) {
  margin-top: 3rem;
  font-size: 6rem;
}
.index__worldsupports__paragraphs__wrapper .index__worldsupports__paragraph:nth-of-type(3) {
  margin-top: 4.8rem;
}
.index__worldsupports__paragraphs__wrapper .index__worldsupports__paragraph:nth-of-type(4) {
  margin-top: 3.6rem;
  font-size: 14.8rem;
  color: #FFE459;
  font-family: "Montserrat";
  width: 90%;
  font-weight: 800;
}

.index__worldsupports__map__wrapper {
  position: absolute;
  bottom: -27.5rem;
}

.preloader {
  background: #ffffff;
  color: #000000;
  text-align: center;
  z-index: 9;
  width: 100vw;
  height: 100vh;
}
.header {
  z-index: 2;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
}

.header__wrapper {
  height: 8.8rem;
  background-color: #FFE459;
}

.class {
  color: #fff;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/